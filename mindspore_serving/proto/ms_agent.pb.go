// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mindspore_serving/proto/ms_agent.proto

package mindspore_serving_proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type DistributedPredictRequest struct {
	Inputs               []*Tensor `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	ReturnResult         bool      `protobuf:"varint,2,opt,name=return_result,json=returnResult,proto3" json:"return_result,omitempty"`
	Subgraph             int64     `protobuf:"varint,3,opt,name=subgraph,proto3" json:"subgraph,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DistributedPredictRequest) Reset()         { *m = DistributedPredictRequest{} }
func (m *DistributedPredictRequest) String() string { return proto.CompactTextString(m) }
func (*DistributedPredictRequest) ProtoMessage()    {}
func (*DistributedPredictRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0994e1af14d03327, []int{0}
}
func (m *DistributedPredictRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DistributedPredictRequest.Unmarshal(m, b)
}
func (m *DistributedPredictRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DistributedPredictRequest.Marshal(b, m, deterministic)
}
func (m *DistributedPredictRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistributedPredictRequest.Merge(m, src)
}
func (m *DistributedPredictRequest) XXX_Size() int {
	return xxx_messageInfo_DistributedPredictRequest.Size(m)
}
func (m *DistributedPredictRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DistributedPredictRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DistributedPredictRequest proto.InternalMessageInfo

func (m *DistributedPredictRequest) GetInputs() []*Tensor {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *DistributedPredictRequest) GetReturnResult() bool {
	if m != nil {
		return m.ReturnResult
	}
	return false
}

func (m *DistributedPredictRequest) GetSubgraph() int64 {
	if m != nil {
		return m.Subgraph
	}
	return 0
}

type DistributedPredictReply struct {
	Outputs              []*Tensor `protobuf:"bytes,1,rep,name=outputs,proto3" json:"outputs,omitempty"`
	ErrorMsg             *ErrorMsg `protobuf:"bytes,2,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DistributedPredictReply) Reset()         { *m = DistributedPredictReply{} }
func (m *DistributedPredictReply) String() string { return proto.CompactTextString(m) }
func (*DistributedPredictReply) ProtoMessage()    {}
func (*DistributedPredictReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0994e1af14d03327, []int{1}
}
func (m *DistributedPredictReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DistributedPredictReply.Unmarshal(m, b)
}
func (m *DistributedPredictReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DistributedPredictReply.Marshal(b, m, deterministic)
}
func (m *DistributedPredictReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistributedPredictReply.Merge(m, src)
}
func (m *DistributedPredictReply) XXX_Size() int {
	return xxx_messageInfo_DistributedPredictReply.Size(m)
}
func (m *DistributedPredictReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DistributedPredictReply.DiscardUnknown(m)
}

var xxx_messageInfo_DistributedPredictReply proto.InternalMessageInfo

func (m *DistributedPredictReply) GetOutputs() []*Tensor {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *DistributedPredictReply) GetErrorMsg() *ErrorMsg {
	if m != nil {
		return m.ErrorMsg
	}
	return nil
}

type DistributedExitRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DistributedExitRequest) Reset()         { *m = DistributedExitRequest{} }
func (m *DistributedExitRequest) String() string { return proto.CompactTextString(m) }
func (*DistributedExitRequest) ProtoMessage()    {}
func (*DistributedExitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0994e1af14d03327, []int{2}
}
func (m *DistributedExitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DistributedExitRequest.Unmarshal(m, b)
}
func (m *DistributedExitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DistributedExitRequest.Marshal(b, m, deterministic)
}
func (m *DistributedExitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistributedExitRequest.Merge(m, src)
}
func (m *DistributedExitRequest) XXX_Size() int {
	return xxx_messageInfo_DistributedExitRequest.Size(m)
}
func (m *DistributedExitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DistributedExitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DistributedExitRequest proto.InternalMessageInfo

func (m *DistributedExitRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type DistributedExitReply struct {
	ErrorMsg             *ErrorMsg `protobuf:"bytes,1,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DistributedExitReply) Reset()         { *m = DistributedExitReply{} }
func (m *DistributedExitReply) String() string { return proto.CompactTextString(m) }
func (*DistributedExitReply) ProtoMessage()    {}
func (*DistributedExitReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0994e1af14d03327, []int{3}
}
func (m *DistributedExitReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DistributedExitReply.Unmarshal(m, b)
}
func (m *DistributedExitReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DistributedExitReply.Marshal(b, m, deterministic)
}
func (m *DistributedExitReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistributedExitReply.Merge(m, src)
}
func (m *DistributedExitReply) XXX_Size() int {
	return xxx_messageInfo_DistributedExitReply.Size(m)
}
func (m *DistributedExitReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DistributedExitReply.DiscardUnknown(m)
}

var xxx_messageInfo_DistributedExitReply proto.InternalMessageInfo

func (m *DistributedExitReply) GetErrorMsg() *ErrorMsg {
	if m != nil {
		return m.ErrorMsg
	}
	return nil
}

func init() {
	proto.RegisterType((*DistributedPredictRequest)(nil), "mindspore.serving.proto.DistributedPredictRequest")
	proto.RegisterType((*DistributedPredictReply)(nil), "mindspore.serving.proto.DistributedPredictReply")
	proto.RegisterType((*DistributedExitRequest)(nil), "mindspore.serving.proto.DistributedExitRequest")
	proto.RegisterType((*DistributedExitReply)(nil), "mindspore.serving.proto.DistributedExitReply")
}

func init() {
	proto.RegisterFile("mindspore_serving/proto/ms_agent.proto", fileDescriptor_0994e1af14d03327)
}

var fileDescriptor_0994e1af14d03327 = []byte{
	// 360 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xcf, 0x4f, 0xf2, 0x40,
	0x10, 0xfd, 0xfa, 0x95, 0x50, 0x18, 0xbe, 0xef, 0xb2, 0x31, 0x52, 0x7b, 0x11, 0xab, 0x31, 0xbd,
	0x58, 0x4c, 0x3d, 0x18, 0x2f, 0x26, 0x26, 0x72, 0x24, 0x21, 0xab, 0xf1, 0xda, 0x00, 0xdd, 0x94,
	0x4d, 0xa0, 0x5b, 0x66, 0x77, 0x8d, 0xfc, 0x13, 0x9e, 0xf4, 0xff, 0x35, 0xfd, 0x41, 0xc5, 0x68,
	0x11, 0x6e, 0x9d, 0x37, 0xef, 0xbd, 0x79, 0x33, 0x5d, 0x38, 0x5f, 0xf0, 0x24, 0x92, 0xa9, 0x40,
	0x16, 0x4a, 0x86, 0xcf, 0x3c, 0x89, 0xfb, 0x29, 0x0a, 0x25, 0xfa, 0x0b, 0x19, 0x8e, 0x63, 0x96,
	0x28, 0x3f, 0x2f, 0x49, 0xb7, 0xe2, 0xf9, 0x25, 0xaf, 0x68, 0x38, 0xde, 0x16, 0x83, 0x1c, 0x98,
	0xb2, 0x82, 0xe9, 0xbe, 0x1b, 0x70, 0x74, 0xcf, 0xa5, 0x42, 0x3e, 0xd1, 0x8a, 0x45, 0x23, 0x64,
	0x11, 0x9f, 0x2a, 0xca, 0x96, 0x9a, 0x49, 0x45, 0xae, 0xa1, 0xc9, 0x93, 0x54, 0x2b, 0x69, 0x1b,
	0x3d, 0xd3, 0xeb, 0x04, 0xc7, 0x7e, 0xcd, 0x44, 0xff, 0x91, 0x25, 0x52, 0x20, 0x2d, 0xe9, 0xe4,
	0x14, 0xfe, 0x23, 0x53, 0x1a, 0x93, 0x10, 0x99, 0xd4, 0x73, 0x65, 0xff, 0xed, 0x19, 0x5e, 0x8b,
	0xfe, 0x2b, 0x40, 0x9a, 0x63, 0xc4, 0x81, 0x96, 0xd4, 0x93, 0x18, 0xc7, 0xe9, 0xcc, 0x36, 0x7b,
	0x86, 0x67, 0xd2, 0xaa, 0x76, 0xdf, 0x0c, 0xe8, 0xfe, 0x94, 0x2b, 0x9d, 0xaf, 0xc8, 0x0d, 0x58,
	0x42, 0xab, 0x7d, 0x62, 0xad, 0xf9, 0xe4, 0x16, 0xda, 0x0c, 0x51, 0x60, 0xb8, 0x90, 0x71, 0x9e,
	0xa9, 0x13, 0x9c, 0xd4, 0x8a, 0x07, 0x19, 0x73, 0x28, 0x63, 0xda, 0x62, 0xe5, 0x97, 0x1b, 0xc0,
	0xe1, 0x46, 0xaa, 0xc1, 0x0b, 0xaf, 0x4e, 0x65, 0x83, 0x35, 0x8e, 0x22, 0x64, 0x32, 0x0b, 0x65,
	0x78, 0x6d, 0xba, 0x2e, 0xdd, 0x27, 0x38, 0xf8, 0xa6, 0xc9, 0xd6, 0xf8, 0x92, 0xc5, 0xd8, 0x3b,
	0x4b, 0xf0, 0x6a, 0x82, 0x35, 0x7c, 0xb8, 0xcb, 0xde, 0x03, 0x59, 0x82, 0x55, 0x9e, 0x88, 0x04,
	0xb5, 0x1e, 0xb5, 0xff, 0xd9, 0xb9, 0xdc, 0x4b, 0x93, 0xce, 0x57, 0xee, 0x1f, 0x32, 0x83, 0x46,
	0xb6, 0x0b, 0xe9, 0xef, 0xa2, 0xdd, 0xb8, 0x94, 0x73, 0xb1, 0xbb, 0xa0, 0x98, 0x44, 0xa1, 0x31,
	0xe2, 0x49, 0x4c, 0xce, 0x6a, 0x85, 0x59, 0x7b, 0x6d, 0xef, 0xfe, 0xc2, 0xfa, 0xf4, 0x14, 0xdb,
	0x3d, 0xc5, 0x4e, 0x9e, 0xa2, 0xf2, 0x9c, 0x34, 0x73, 0xe8, 0xea, 0x23, 0x00, 0x00, 0xff, 0xff,
	0x48, 0x42, 0xf2, 0xd9, 0xbf, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MSAgentClient is the client API for MSAgent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MSAgentClient interface {
	Predict(ctx context.Context, in *DistributedPredictRequest, opts ...grpc.CallOption) (*DistributedPredictReply, error)
	Exit(ctx context.Context, in *DistributedExitRequest, opts ...grpc.CallOption) (*DistributedExitReply, error)
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error)
	Pong(ctx context.Context, in *PongRequest, opts ...grpc.CallOption) (*PongReply, error)
}

type mSAgentClient struct {
	cc *grpc.ClientConn
}

func NewMSAgentClient(cc *grpc.ClientConn) MSAgentClient {
	return &mSAgentClient{cc}
}

func (c *mSAgentClient) Predict(ctx context.Context, in *DistributedPredictRequest, opts ...grpc.CallOption) (*DistributedPredictReply, error) {
	out := new(DistributedPredictReply)
	err := c.cc.Invoke(ctx, "/mindspore.serving.proto.MSAgent/Predict", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mSAgentClient) Exit(ctx context.Context, in *DistributedExitRequest, opts ...grpc.CallOption) (*DistributedExitReply, error) {
	out := new(DistributedExitReply)
	err := c.cc.Invoke(ctx, "/mindspore.serving.proto.MSAgent/Exit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mSAgentClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error) {
	out := new(PingReply)
	err := c.cc.Invoke(ctx, "/mindspore.serving.proto.MSAgent/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mSAgentClient) Pong(ctx context.Context, in *PongRequest, opts ...grpc.CallOption) (*PongReply, error) {
	out := new(PongReply)
	err := c.cc.Invoke(ctx, "/mindspore.serving.proto.MSAgent/Pong", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MSAgentServer is the server API for MSAgent service.
type MSAgentServer interface {
	Predict(context.Context, *DistributedPredictRequest) (*DistributedPredictReply, error)
	Exit(context.Context, *DistributedExitRequest) (*DistributedExitReply, error)
	Ping(context.Context, *PingRequest) (*PingReply, error)
	Pong(context.Context, *PongRequest) (*PongReply, error)
}

func RegisterMSAgentServer(s *grpc.Server, srv MSAgentServer) {
	s.RegisterService(&_MSAgent_serviceDesc, srv)
}

func _MSAgent_Predict_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DistributedPredictRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MSAgentServer).Predict(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mindspore.serving.proto.MSAgent/Predict",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MSAgentServer).Predict(ctx, req.(*DistributedPredictRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MSAgent_Exit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DistributedExitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MSAgentServer).Exit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mindspore.serving.proto.MSAgent/Exit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MSAgentServer).Exit(ctx, req.(*DistributedExitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MSAgent_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MSAgentServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mindspore.serving.proto.MSAgent/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MSAgentServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MSAgent_Pong_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PongRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MSAgentServer).Pong(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mindspore.serving.proto.MSAgent/Pong",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MSAgentServer).Pong(ctx, req.(*PongRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MSAgent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mindspore.serving.proto.MSAgent",
	HandlerType: (*MSAgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Predict",
			Handler:    _MSAgent_Predict_Handler,
		},
		{
			MethodName: "Exit",
			Handler:    _MSAgent_Exit_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _MSAgent_Ping_Handler,
		},
		{
			MethodName: "Pong",
			Handler:    _MSAgent_Pong_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mindspore_serving/proto/ms_agent.proto",
}
