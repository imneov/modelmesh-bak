// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mindspore_serving/proto/ms_service.proto

package mindspore_serving_proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type DataType int32

const (
	DataType_MS_UNKNOWN DataType = 0
	DataType_MS_BOOL    DataType = 1
	DataType_MS_INT8    DataType = 2
	DataType_MS_UINT8   DataType = 3
	DataType_MS_INT16   DataType = 4
	DataType_MS_UINT16  DataType = 5
	DataType_MS_INT32   DataType = 6
	DataType_MS_UINT32  DataType = 7
	DataType_MS_INT64   DataType = 8
	DataType_MS_UINT64  DataType = 9
	DataType_MS_FLOAT16 DataType = 10
	DataType_MS_FLOAT32 DataType = 11
	DataType_MS_FLOAT64 DataType = 12
	DataType_MS_STRING  DataType = 13
	DataType_MS_BYTES   DataType = 14
)

var DataType_name = map[int32]string{
	0:  "MS_UNKNOWN",
	1:  "MS_BOOL",
	2:  "MS_INT8",
	3:  "MS_UINT8",
	4:  "MS_INT16",
	5:  "MS_UINT16",
	6:  "MS_INT32",
	7:  "MS_UINT32",
	8:  "MS_INT64",
	9:  "MS_UINT64",
	10: "MS_FLOAT16",
	11: "MS_FLOAT32",
	12: "MS_FLOAT64",
	13: "MS_STRING",
	14: "MS_BYTES",
}

var DataType_value = map[string]int32{
	"MS_UNKNOWN": 0,
	"MS_BOOL":    1,
	"MS_INT8":    2,
	"MS_UINT8":   3,
	"MS_INT16":   4,
	"MS_UINT16":  5,
	"MS_INT32":   6,
	"MS_UINT32":  7,
	"MS_INT64":   8,
	"MS_UINT64":  9,
	"MS_FLOAT16": 10,
	"MS_FLOAT32": 11,
	"MS_FLOAT64": 12,
	"MS_STRING":  13,
	"MS_BYTES":   14,
}

func (x DataType) String() string {
	return proto.EnumName(DataType_name, int32(x))
}

func (DataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4517038aadadf9e7, []int{0}
}

type PredictRequest struct {
	ServableSpec         *ServableSpec `protobuf:"bytes,1,opt,name=servable_spec,json=servableSpec,proto3" json:"servable_spec,omitempty"`
	Instances            []*Instance   `protobuf:"bytes,2,rep,name=instances,proto3" json:"instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PredictRequest) Reset()         { *m = PredictRequest{} }
func (m *PredictRequest) String() string { return proto.CompactTextString(m) }
func (*PredictRequest) ProtoMessage()    {}
func (*PredictRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4517038aadadf9e7, []int{0}
}
func (m *PredictRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PredictRequest.Unmarshal(m, b)
}
func (m *PredictRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PredictRequest.Marshal(b, m, deterministic)
}
func (m *PredictRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PredictRequest.Merge(m, src)
}
func (m *PredictRequest) XXX_Size() int {
	return xxx_messageInfo_PredictRequest.Size(m)
}
func (m *PredictRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PredictRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PredictRequest proto.InternalMessageInfo

func (m *PredictRequest) GetServableSpec() *ServableSpec {
	if m != nil {
		return m.ServableSpec
	}
	return nil
}

func (m *PredictRequest) GetInstances() []*Instance {
	if m != nil {
		return m.Instances
	}
	return nil
}

type ErrorMsg struct {
	ErrorCode            int64    `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMsg             []byte   `protobuf:"bytes,2,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorMsg) Reset()         { *m = ErrorMsg{} }
func (m *ErrorMsg) String() string { return proto.CompactTextString(m) }
func (*ErrorMsg) ProtoMessage()    {}
func (*ErrorMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_4517038aadadf9e7, []int{1}
}
func (m *ErrorMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorMsg.Unmarshal(m, b)
}
func (m *ErrorMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorMsg.Marshal(b, m, deterministic)
}
func (m *ErrorMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorMsg.Merge(m, src)
}
func (m *ErrorMsg) XXX_Size() int {
	return xxx_messageInfo_ErrorMsg.Size(m)
}
func (m *ErrorMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorMsg proto.InternalMessageInfo

func (m *ErrorMsg) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *ErrorMsg) GetErrorMsg() []byte {
	if m != nil {
		return m.ErrorMsg
	}
	return nil
}

type PredictReply struct {
	ServableSpec *ServableSpec `protobuf:"bytes,1,opt,name=servable_spec,json=servableSpec,proto3" json:"servable_spec,omitempty"`
	Instances    []*Instance   `protobuf:"bytes,3,rep,name=instances,proto3" json:"instances,omitempty"`
	// size 0: OK, 1: for all batch, >1: for every batch
	ErrorMsg             []*ErrorMsg `protobuf:"bytes,4,rep,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PredictReply) Reset()         { *m = PredictReply{} }
func (m *PredictReply) String() string { return proto.CompactTextString(m) }
func (*PredictReply) ProtoMessage()    {}
func (*PredictReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4517038aadadf9e7, []int{2}
}
func (m *PredictReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PredictReply.Unmarshal(m, b)
}
func (m *PredictReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PredictReply.Marshal(b, m, deterministic)
}
func (m *PredictReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PredictReply.Merge(m, src)
}
func (m *PredictReply) XXX_Size() int {
	return xxx_messageInfo_PredictReply.Size(m)
}
func (m *PredictReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PredictReply.DiscardUnknown(m)
}

var xxx_messageInfo_PredictReply proto.InternalMessageInfo

func (m *PredictReply) GetServableSpec() *ServableSpec {
	if m != nil {
		return m.ServableSpec
	}
	return nil
}

func (m *PredictReply) GetInstances() []*Instance {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *PredictReply) GetErrorMsg() []*ErrorMsg {
	if m != nil {
		return m.ErrorMsg
	}
	return nil
}

type Instance struct {
	Items                map[string]*Tensor        `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	OutputBuffers        map[string]*ShmTensorData `protobuf:"bytes,2,rep,name=output_buffers,json=outputBuffers,proto3" json:"output_buffers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Instance) Reset()         { *m = Instance{} }
func (m *Instance) String() string { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()    {}
func (*Instance) Descriptor() ([]byte, []int) {
	return fileDescriptor_4517038aadadf9e7, []int{3}
}
func (m *Instance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instance.Unmarshal(m, b)
}
func (m *Instance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instance.Marshal(b, m, deterministic)
}
func (m *Instance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instance.Merge(m, src)
}
func (m *Instance) XXX_Size() int {
	return xxx_messageInfo_Instance.Size(m)
}
func (m *Instance) XXX_DiscardUnknown() {
	xxx_messageInfo_Instance.DiscardUnknown(m)
}

var xxx_messageInfo_Instance proto.InternalMessageInfo

func (m *Instance) GetItems() map[string]*Tensor {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Instance) GetOutputBuffers() map[string]*ShmTensorData {
	if m != nil {
		return m.OutputBuffers
	}
	return nil
}

type TensorShape struct {
	Dims                 []int64  `protobuf:"varint,1,rep,packed,name=dims,proto3" json:"dims,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TensorShape) Reset()         { *m = TensorShape{} }
func (m *TensorShape) String() string { return proto.CompactTextString(m) }
func (*TensorShape) ProtoMessage()    {}
func (*TensorShape) Descriptor() ([]byte, []int) {
	return fileDescriptor_4517038aadadf9e7, []int{4}
}
func (m *TensorShape) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TensorShape.Unmarshal(m, b)
}
func (m *TensorShape) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TensorShape.Marshal(b, m, deterministic)
}
func (m *TensorShape) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TensorShape.Merge(m, src)
}
func (m *TensorShape) XXX_Size() int {
	return xxx_messageInfo_TensorShape.Size(m)
}
func (m *TensorShape) XXX_DiscardUnknown() {
	xxx_messageInfo_TensorShape.DiscardUnknown(m)
}

var xxx_messageInfo_TensorShape proto.InternalMessageInfo

func (m *TensorShape) GetDims() []int64 {
	if m != nil {
		return m.Dims
	}
	return nil
}

type ShmTensorData struct {
	MemoryKey            string   `protobuf:"bytes,1,opt,name=memory_key,json=memoryKey,proto3" json:"memory_key,omitempty"`
	BytesSize            uint64   `protobuf:"varint,2,opt,name=bytes_size,json=bytesSize,proto3" json:"bytes_size,omitempty"`
	DataOffset           uint64   `protobuf:"varint,3,opt,name=data_offset,json=dataOffset,proto3" json:"data_offset,omitempty"`
	DataSize             uint64   `protobuf:"varint,4,opt,name=data_size,json=dataSize,proto3" json:"data_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShmTensorData) Reset()         { *m = ShmTensorData{} }
func (m *ShmTensorData) String() string { return proto.CompactTextString(m) }
func (*ShmTensorData) ProtoMessage()    {}
func (*ShmTensorData) Descriptor() ([]byte, []int) {
	return fileDescriptor_4517038aadadf9e7, []int{5}
}
func (m *ShmTensorData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShmTensorData.Unmarshal(m, b)
}
func (m *ShmTensorData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShmTensorData.Marshal(b, m, deterministic)
}
func (m *ShmTensorData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShmTensorData.Merge(m, src)
}
func (m *ShmTensorData) XXX_Size() int {
	return xxx_messageInfo_ShmTensorData.Size(m)
}
func (m *ShmTensorData) XXX_DiscardUnknown() {
	xxx_messageInfo_ShmTensorData.DiscardUnknown(m)
}

var xxx_messageInfo_ShmTensorData proto.InternalMessageInfo

func (m *ShmTensorData) GetMemoryKey() string {
	if m != nil {
		return m.MemoryKey
	}
	return ""
}

func (m *ShmTensorData) GetBytesSize() uint64 {
	if m != nil {
		return m.BytesSize
	}
	return 0
}

func (m *ShmTensorData) GetDataOffset() uint64 {
	if m != nil {
		return m.DataOffset
	}
	return 0
}

func (m *ShmTensorData) GetDataSize() uint64 {
	if m != nil {
		return m.DataSize
	}
	return 0
}

type Tensor struct {
	// tensor shape info
	Shape *TensorShape `protobuf:"bytes,1,opt,name=shape,proto3" json:"shape,omitempty"`
	// tensor content data type
	Dtype DataType `protobuf:"varint,2,opt,name=dtype,proto3,enum=mindspore.serving.proto.DataType" json:"dtype,omitempty"`
	// tensor data
	//
	// Types that are valid to be assigned to TensorData:
	//
	//	*Tensor_Data
	//	*Tensor_ShmData
	TensorData isTensor_TensorData `protobuf_oneof:"tensor_data"`
	// for string type and images, the dtype is MS_BYTES.
	BytesVal             [][]byte `protobuf:"bytes,4,rep,name=bytes_val,json=bytesVal,proto3" json:"bytes_val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tensor) Reset()         { *m = Tensor{} }
func (m *Tensor) String() string { return proto.CompactTextString(m) }
func (*Tensor) ProtoMessage()    {}
func (*Tensor) Descriptor() ([]byte, []int) {
	return fileDescriptor_4517038aadadf9e7, []int{6}
}
func (m *Tensor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tensor.Unmarshal(m, b)
}
func (m *Tensor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tensor.Marshal(b, m, deterministic)
}
func (m *Tensor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tensor.Merge(m, src)
}
func (m *Tensor) XXX_Size() int {
	return xxx_messageInfo_Tensor.Size(m)
}
func (m *Tensor) XXX_DiscardUnknown() {
	xxx_messageInfo_Tensor.DiscardUnknown(m)
}

var xxx_messageInfo_Tensor proto.InternalMessageInfo

type isTensor_TensorData interface {
	isTensor_TensorData()
}

type Tensor_Data struct {
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3,oneof"`
}
type Tensor_ShmData struct {
	ShmData *ShmTensorData `protobuf:"bytes,5,opt,name=shm_data,json=shmData,proto3,oneof"`
}

func (*Tensor_Data) isTensor_TensorData()    {}
func (*Tensor_ShmData) isTensor_TensorData() {}

func (m *Tensor) GetTensorData() isTensor_TensorData {
	if m != nil {
		return m.TensorData
	}
	return nil
}

func (m *Tensor) GetShape() *TensorShape {
	if m != nil {
		return m.Shape
	}
	return nil
}

func (m *Tensor) GetDtype() DataType {
	if m != nil {
		return m.Dtype
	}
	return DataType_MS_UNKNOWN
}

func (m *Tensor) GetData() []byte {
	if x, ok := m.GetTensorData().(*Tensor_Data); ok {
		return x.Data
	}
	return nil
}

func (m *Tensor) GetShmData() *ShmTensorData {
	if x, ok := m.GetTensorData().(*Tensor_ShmData); ok {
		return x.ShmData
	}
	return nil
}

func (m *Tensor) GetBytesVal() [][]byte {
	if m != nil {
		return m.BytesVal
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Tensor) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Tensor_OneofMarshaler, _Tensor_OneofUnmarshaler, _Tensor_OneofSizer, []interface{}{
		(*Tensor_Data)(nil),
		(*Tensor_ShmData)(nil),
	}
}

func _Tensor_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Tensor)
	// tensor_data
	switch x := m.TensorData.(type) {
	case *Tensor_Data:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		_ = b.EncodeRawBytes(x.Data)
	case *Tensor_ShmData:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ShmData); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Tensor.TensorData has unexpected type %T", x)
	}
	return nil
}

func _Tensor_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Tensor)
	switch tag {
	case 3: // tensor_data.data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.TensorData = &Tensor_Data{x}
		return true, err
	case 5: // tensor_data.shm_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ShmTensorData)
		err := b.DecodeMessage(msg)
		m.TensorData = &Tensor_ShmData{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Tensor_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Tensor)
	// tensor_data
	switch x := m.TensorData.(type) {
	case *Tensor_Data:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Data)))
		n += len(x.Data)
	case *Tensor_ShmData:
		s := proto.Size(x.ShmData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ServableSpec struct {
	// servable name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// optional. If unspecified, the latest version servable will be used.
	VersionNumber uint64 `protobuf:"varint,3,opt,name=version_number,json=versionNumber,proto3" json:"version_number,omitempty"`
	// Specifies the method name in the servable.
	MethodName           string   `protobuf:"bytes,2,opt,name=method_name,json=methodName,proto3" json:"method_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServableSpec) Reset()         { *m = ServableSpec{} }
func (m *ServableSpec) String() string { return proto.CompactTextString(m) }
func (*ServableSpec) ProtoMessage()    {}
func (*ServableSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_4517038aadadf9e7, []int{7}
}
func (m *ServableSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServableSpec.Unmarshal(m, b)
}
func (m *ServableSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServableSpec.Marshal(b, m, deterministic)
}
func (m *ServableSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServableSpec.Merge(m, src)
}
func (m *ServableSpec) XXX_Size() int {
	return xxx_messageInfo_ServableSpec.Size(m)
}
func (m *ServableSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ServableSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ServableSpec proto.InternalMessageInfo

func (m *ServableSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServableSpec) GetVersionNumber() uint64 {
	if m != nil {
		return m.VersionNumber
	}
	return 0
}

func (m *ServableSpec) GetMethodName() string {
	if m != nil {
		return m.MethodName
	}
	return ""
}

type PingRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4517038aadadf9e7, []int{8}
}
func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (m *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(m, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

func (m *PingRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type PingReply struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingReply) Reset()         { *m = PingReply{} }
func (m *PingReply) String() string { return proto.CompactTextString(m) }
func (*PingReply) ProtoMessage()    {}
func (*PingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4517038aadadf9e7, []int{9}
}
func (m *PingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingReply.Unmarshal(m, b)
}
func (m *PingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingReply.Marshal(b, m, deterministic)
}
func (m *PingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingReply.Merge(m, src)
}
func (m *PingReply) XXX_Size() int {
	return xxx_messageInfo_PingReply.Size(m)
}
func (m *PingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PingReply.DiscardUnknown(m)
}

var xxx_messageInfo_PingReply proto.InternalMessageInfo

func (m *PingReply) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type PongRequest struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PongRequest) Reset()         { *m = PongRequest{} }
func (m *PongRequest) String() string { return proto.CompactTextString(m) }
func (*PongRequest) ProtoMessage()    {}
func (*PongRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4517038aadadf9e7, []int{10}
}
func (m *PongRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PongRequest.Unmarshal(m, b)
}
func (m *PongRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PongRequest.Marshal(b, m, deterministic)
}
func (m *PongRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PongRequest.Merge(m, src)
}
func (m *PongRequest) XXX_Size() int {
	return xxx_messageInfo_PongRequest.Size(m)
}
func (m *PongRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PongRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PongRequest proto.InternalMessageInfo

func (m *PongRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type PongReply struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PongReply) Reset()         { *m = PongReply{} }
func (m *PongReply) String() string { return proto.CompactTextString(m) }
func (*PongReply) ProtoMessage()    {}
func (*PongReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4517038aadadf9e7, []int{11}
}
func (m *PongReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PongReply.Unmarshal(m, b)
}
func (m *PongReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PongReply.Marshal(b, m, deterministic)
}
func (m *PongReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PongReply.Merge(m, src)
}
func (m *PongReply) XXX_Size() int {
	return xxx_messageInfo_PongReply.Size(m)
}
func (m *PongReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PongReply.DiscardUnknown(m)
}

var xxx_messageInfo_PongReply proto.InternalMessageInfo

func (m *PongReply) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type TensorInfo struct {
	Shape                *TensorShape `protobuf:"bytes,1,opt,name=shape,proto3" json:"shape,omitempty"`
	Dtype                DataType     `protobuf:"varint,2,opt,name=dtype,proto3,enum=mindspore.serving.proto.DataType" json:"dtype,omitempty"`
	Size_                uint64       `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	IsNoBatchDim         bool         `protobuf:"varint,4,opt,name=is_no_batch_dim,json=isNoBatchDim,proto3" json:"is_no_batch_dim,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TensorInfo) Reset()         { *m = TensorInfo{} }
func (m *TensorInfo) String() string { return proto.CompactTextString(m) }
func (*TensorInfo) ProtoMessage()    {}
func (*TensorInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4517038aadadf9e7, []int{12}
}
func (m *TensorInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TensorInfo.Unmarshal(m, b)
}
func (m *TensorInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TensorInfo.Marshal(b, m, deterministic)
}
func (m *TensorInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TensorInfo.Merge(m, src)
}
func (m *TensorInfo) XXX_Size() int {
	return xxx_messageInfo_TensorInfo.Size(m)
}
func (m *TensorInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TensorInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TensorInfo proto.InternalMessageInfo

func (m *TensorInfo) GetShape() *TensorShape {
	if m != nil {
		return m.Shape
	}
	return nil
}

func (m *TensorInfo) GetDtype() DataType {
	if m != nil {
		return m.Dtype
	}
	return DataType_MS_UNKNOWN
}

func (m *TensorInfo) GetSize_() uint64 {
	if m != nil {
		return m.Size_
	}
	return 0
}

func (m *TensorInfo) GetIsNoBatchDim() bool {
	if m != nil {
		return m.IsNoBatchDim
	}
	return false
}

func init() {
	proto.RegisterEnum("mindspore.serving.proto.DataType", DataType_name, DataType_value)
	proto.RegisterType((*PredictRequest)(nil), "mindspore.serving.proto.PredictRequest")
	proto.RegisterType((*ErrorMsg)(nil), "mindspore.serving.proto.ErrorMsg")
	proto.RegisterType((*PredictReply)(nil), "mindspore.serving.proto.PredictReply")
	proto.RegisterType((*Instance)(nil), "mindspore.serving.proto.Instance")
	proto.RegisterMapType((map[string]*Tensor)(nil), "mindspore.serving.proto.Instance.ItemsEntry")
	proto.RegisterMapType((map[string]*ShmTensorData)(nil), "mindspore.serving.proto.Instance.OutputBuffersEntry")
	proto.RegisterType((*TensorShape)(nil), "mindspore.serving.proto.TensorShape")
	proto.RegisterType((*ShmTensorData)(nil), "mindspore.serving.proto.ShmTensorData")
	proto.RegisterType((*Tensor)(nil), "mindspore.serving.proto.Tensor")
	proto.RegisterType((*ServableSpec)(nil), "mindspore.serving.proto.ServableSpec")
	proto.RegisterType((*PingRequest)(nil), "mindspore.serving.proto.PingRequest")
	proto.RegisterType((*PingReply)(nil), "mindspore.serving.proto.PingReply")
	proto.RegisterType((*PongRequest)(nil), "mindspore.serving.proto.PongRequest")
	proto.RegisterType((*PongReply)(nil), "mindspore.serving.proto.PongReply")
	proto.RegisterType((*TensorInfo)(nil), "mindspore.serving.proto.TensorInfo")
}

func init() {
	proto.RegisterFile("mindspore_serving/proto/ms_service.proto", fileDescriptor_4517038aadadf9e7)
}

var fileDescriptor_4517038aadadf9e7 = []byte{
	// 857 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0x5f, 0x8f, 0xdb, 0x44,
	0x10, 0x3f, 0xe7, 0xcf, 0x9d, 0x33, 0x76, 0x82, 0xb5, 0x42, 0x22, 0xba, 0x0a, 0xf5, 0x6a, 0x11,
	0x7a, 0x42, 0x28, 0x55, 0x73, 0x47, 0xa8, 0x2a, 0x04, 0x22, 0xed, 0x95, 0x86, 0xf6, 0x9c, 0xca,
	0x0e, 0xa0, 0xaa, 0x0f, 0x2b, 0x27, 0xde, 0x5c, 0x0c, 0xb1, 0xd7, 0x78, 0x9d, 0x93, 0xdc, 0x67,
	0xde, 0xf8, 0x0c, 0x7c, 0x13, 0xbe, 0x09, 0xef, 0x3c, 0xf3, 0x11, 0xd0, 0xce, 0x6e, 0x1a, 0x9f,
	0x20, 0x84, 0x3e, 0x20, 0xde, 0x76, 0x7e, 0xf3, 0x9b, 0xdf, 0xcc, 0xce, 0x8c, 0xbd, 0x70, 0x9a,
	0xc4, 0x69, 0x24, 0x32, 0x9e, 0x33, 0x2a, 0x58, 0x7e, 0x1d, 0xa7, 0x57, 0xf7, 0xb2, 0x9c, 0x17,
	0xfc, 0x5e, 0x22, 0x14, 0x30, 0x67, 0x7d, 0x04, 0xc8, 0x7b, 0x6f, 0x98, 0x7d, 0xcd, 0x54, 0x0e,
	0xf7, 0x17, 0x03, 0x3a, 0x2f, 0x72, 0x16, 0xc5, 0xf3, 0xc2, 0x67, 0x3f, 0xae, 0x99, 0x28, 0xc8,
	0xd7, 0xd0, 0x96, 0x9c, 0x70, 0xb6, 0x62, 0x54, 0x64, 0x6c, 0xde, 0x35, 0x4e, 0x8c, 0x53, 0x6b,
	0xd0, 0xeb, 0xef, 0xd0, 0xe8, 0x07, 0x9a, 0x1d, 0x64, 0x6c, 0xee, 0xdb, 0xa2, 0x62, 0x91, 0x2f,
	0xa0, 0x15, 0xa7, 0xa2, 0x08, 0xd3, 0x39, 0x13, 0xdd, 0xda, 0x49, 0xfd, 0xd4, 0x1a, 0xdc, 0xd9,
	0xa9, 0x33, 0xd6, 0x4c, 0x7f, 0x1b, 0xe3, 0x3e, 0x01, 0xf3, 0x22, 0xcf, 0x79, 0x7e, 0x29, 0xae,
	0xc8, 0xfb, 0x00, 0x4c, 0x9e, 0xe9, 0x9c, 0x47, 0x0c, 0xab, 0xaa, 0xfb, 0x2d, 0x44, 0x1e, 0xf1,
	0x88, 0x91, 0x5b, 0xa0, 0x0c, 0x9a, 0x88, 0xab, 0x6e, 0xed, 0xc4, 0x38, 0xb5, 0x7d, 0x93, 0xe9,
	0x58, 0xf7, 0x37, 0x03, 0xec, 0x37, 0xf7, 0xcc, 0x56, 0xe5, 0x7f, 0x77, 0xcb, 0xfa, 0xdb, 0xdf,
	0x92, 0x7c, 0x5e, 0x2d, 0xbd, 0xb1, 0x47, 0x60, 0xd3, 0x8f, 0xca, 0xed, 0xfe, 0xa8, 0x81, 0xb9,
	0xd1, 0x25, 0x23, 0x68, 0xc6, 0x05, 0x4b, 0x44, 0xd7, 0x40, 0xa1, 0x8f, 0xf7, 0x56, 0xd2, 0x1f,
	0x4b, 0xfa, 0x45, 0x5a, 0xe4, 0xa5, 0xaf, 0x42, 0xc9, 0x2b, 0xe8, 0xf0, 0x75, 0x91, 0xad, 0x0b,
	0x3a, 0x5b, 0x2f, 0x16, 0x2c, 0xdf, 0x0c, 0xef, 0x7c, 0xbf, 0xd8, 0x04, 0xe3, 0x46, 0x2a, 0x4c,
	0x89, 0xb6, 0x79, 0x15, 0x3b, 0x7e, 0x09, 0xb0, 0xcd, 0x48, 0x1c, 0xa8, 0xff, 0xc0, 0x4a, 0x6c,
	0x7f, 0xcb, 0x97, 0x47, 0xf2, 0x09, 0x34, 0xaf, 0xc3, 0xd5, 0x9a, 0xe1, 0x10, 0xad, 0xc1, 0xed,
	0x9d, 0x39, 0xa7, 0x2c, 0x15, 0x3c, 0xf7, 0x15, 0xfb, 0x61, 0xed, 0x81, 0x71, 0xbc, 0x04, 0xf2,
	0xd7, 0xfc, 0x7f, 0x93, 0xe2, 0xb3, 0x9b, 0x29, 0x3e, 0xdc, 0x3d, 0xf5, 0x65, 0xa2, 0xb2, 0x3c,
	0x0e, 0x8b, 0xb0, 0x92, 0xc9, 0xbd, 0x03, 0x96, 0x72, 0x04, 0xcb, 0x30, 0x63, 0x84, 0x40, 0x23,
	0x8a, 0x75, 0xcf, 0xeb, 0x3e, 0x9e, 0xdd, 0x9f, 0x0d, 0x68, 0xdf, 0x88, 0x97, 0x1b, 0x9c, 0xb0,
	0x84, 0xe7, 0x25, 0xdd, 0xd6, 0xd3, 0x52, 0xc8, 0x33, 0x56, 0x4a, 0xf7, 0xac, 0x2c, 0x98, 0xa0,
	0x22, 0x7e, 0xad, 0x4a, 0x6b, 0xf8, 0x2d, 0x44, 0x82, 0xf8, 0x35, 0x23, 0xb7, 0xc1, 0x8a, 0xc2,
	0x22, 0xa4, 0x7c, 0xb1, 0x10, 0xac, 0xe8, 0xd6, 0xd1, 0x0f, 0x12, 0x9a, 0x20, 0x22, 0xbf, 0x00,
	0x24, 0x60, 0x78, 0x03, 0xdd, 0xa6, 0x04, 0x64, 0xb4, 0xfb, 0x53, 0x0d, 0x0e, 0x55, 0x29, 0xe4,
	0x21, 0x34, 0x85, 0xac, 0x5a, 0xef, 0xfc, 0x07, 0x7b, 0x1a, 0x8c, 0x37, 0xf4, 0x55, 0x08, 0xf9,
	0x14, 0x9a, 0x51, 0x51, 0x66, 0xaa, 0xbc, 0xce, 0x3f, 0xac, 0xa9, 0xbc, 0xf0, 0xb4, 0x94, 0x81,
	0xc8, 0x27, 0xef, 0x42, 0x43, 0xd6, 0x82, 0x65, 0xdb, 0x4f, 0x0f, 0x7c, 0xb4, 0xc8, 0x23, 0x30,
	0xc5, 0x32, 0xa1, 0xe8, 0x69, 0xbe, 0xcd, 0x2c, 0x9e, 0x1e, 0xf8, 0x47, 0x62, 0x99, 0x60, 0x5b,
	0x6f, 0x81, 0xea, 0x12, 0xbd, 0x0e, 0x57, 0xf8, 0xf9, 0xd8, 0xbe, 0x89, 0xc0, 0xb7, 0xe1, 0x6a,
	0xd4, 0x06, 0xab, 0xc0, 0x28, 0x4c, 0xe2, 0x7e, 0x0f, 0x76, 0xf5, 0x4b, 0x96, 0x83, 0x4b, 0xc3,
	0x84, 0xe9, 0x61, 0xe0, 0x99, 0xf4, 0xa0, 0x73, 0xcd, 0x72, 0x11, 0xf3, 0x94, 0xa6, 0xeb, 0x64,
	0xc6, 0x72, 0xdd, 0xeb, 0xb6, 0x46, 0x3d, 0x04, 0xe5, 0x3c, 0x12, 0x56, 0x2c, 0x79, 0x44, 0x51,
	0xa1, 0x86, 0x0a, 0xa0, 0x20, 0x2f, 0x4c, 0x98, 0x7b, 0x17, 0xac, 0x17, 0x71, 0x7a, 0xb5, 0xf9,
	0xb1, 0x76, 0xe1, 0x28, 0x8c, 0xa2, 0x9c, 0x09, 0xa1, 0xb3, 0x6d, 0x4c, 0xb7, 0x07, 0x2d, 0x45,
	0x94, 0x7f, 0xa6, 0xdd, 0x34, 0xa9, 0xc7, 0xff, 0xad, 0x1e, 0xdf, 0xaf, 0xf7, 0xab, 0x01, 0xa0,
	0x3a, 0x3a, 0x4e, 0x17, 0xfc, 0xff, 0x59, 0x0b, 0x02, 0x0d, 0x5c, 0x57, 0xd5, 0x61, 0x3c, 0x93,
	0x1e, 0xbc, 0x13, 0x0b, 0x9a, 0x72, 0x3a, 0x0b, 0x8b, 0xf9, 0x92, 0x46, 0x71, 0x82, 0xdb, 0x6c,
	0xfa, 0x76, 0x2c, 0x3c, 0x3e, 0x92, 0xe0, 0xe3, 0x38, 0xf9, 0xe8, 0x77, 0x03, 0xcc, 0x8d, 0x1c,
	0xe9, 0x00, 0x5c, 0x06, 0xf4, 0x1b, 0xef, 0x99, 0x37, 0xf9, 0xce, 0x73, 0x0e, 0x88, 0x05, 0x47,
	0x97, 0x01, 0x1d, 0x4d, 0x26, 0xcf, 0x1d, 0x43, 0x1b, 0x63, 0x6f, 0xfa, 0xc0, 0xa9, 0x11, 0x1b,
	0x4c, 0xc9, 0x44, 0xab, 0xae, 0xad, 0xb1, 0x37, 0xbd, 0x3f, 0x74, 0x1a, 0xa4, 0x0d, 0x2d, 0xed,
	0xbb, 0x3f, 0x74, 0x9a, 0x5b, 0xe7, 0xd9, 0xc0, 0x39, 0xac, 0x38, 0xcf, 0x06, 0xce, 0xd1, 0xd6,
	0x39, 0x3c, 0x77, 0xcc, 0x8a, 0x73, 0x78, 0xee, 0xb4, 0x74, 0x39, 0x4f, 0x9e, 0x4f, 0xbe, 0x94,
	0x4a, 0x50, 0xb5, 0xcf, 0x06, 0x8e, 0x55, 0xb5, 0x87, 0xe7, 0x8e, 0xad, 0xc3, 0x83, 0xa9, 0x3f,
	0xf6, 0xbe, 0x72, 0xda, 0x5a, 0x7b, 0xf4, 0x72, 0x7a, 0x11, 0x38, 0x9d, 0xc1, 0x52, 0x3a, 0x03,
	0xf5, 0xa0, 0x93, 0x57, 0x70, 0xa4, 0x1f, 0x32, 0x72, 0x77, 0x67, 0x97, 0x6f, 0x3e, 0xe9, 0xc7,
	0xbd, 0xfd, 0xc4, 0x6c, 0x55, 0xba, 0x07, 0xb3, 0x43, 0x44, 0xcf, 0xfe, 0x0c, 0x00, 0x00, 0xff,
	0xff, 0xbc, 0x64, 0x59, 0xb4, 0x5a, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MSServiceClient is the client API for MSService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MSServiceClient interface {
	Predict(ctx context.Context, in *PredictRequest, opts ...grpc.CallOption) (*PredictReply, error)
}

type mSServiceClient struct {
	cc *grpc.ClientConn
}

func NewMSServiceClient(cc *grpc.ClientConn) MSServiceClient {
	return &mSServiceClient{cc}
}

func (c *mSServiceClient) Predict(ctx context.Context, in *PredictRequest, opts ...grpc.CallOption) (*PredictReply, error) {
	out := new(PredictReply)
	err := c.cc.Invoke(ctx, "/mindspore.serving.proto.MSService/Predict", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MSServiceServer is the server API for MSService service.
type MSServiceServer interface {
	Predict(context.Context, *PredictRequest) (*PredictReply, error)
}

func RegisterMSServiceServer(s *grpc.Server, srv MSServiceServer) {
	s.RegisterService(&_MSService_serviceDesc, srv)
}

func _MSService_Predict_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PredictRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MSServiceServer).Predict(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mindspore.serving.proto.MSService/Predict",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MSServiceServer).Predict(ctx, req.(*PredictRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MSService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mindspore.serving.proto.MSService",
	HandlerType: (*MSServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Predict",
			Handler:    _MSService_Predict_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mindspore_serving/proto/ms_service.proto",
}
